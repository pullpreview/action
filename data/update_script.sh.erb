#!/bin/bash

set -e
set -o pipefail

APP_TARBALL="$1"
APP_PATH="<%= locals.remote_app_path %>"
PULLPREVIEW_ENV_FILE="/etc/pullpreview/env"

lock_file="/tmp/update.lock"

lock_cleanup() {
  rm -f "$lock_file"
}

app_cleanup() {
  rm -f "$APP_TARBALL"
}

cleanup() {
  lock_cleanup
  app_cleanup
}

trap cleanup EXIT INT TERM

if [ -f "$lock_file" ]; then
  echo "Previous operation in progress. Waiting for at most 20min before proceeding..."

  for i in {1..240}; do
    sleep 5
    if [ ! -f "$lock_file" ]; then
      break
    fi
    echo "Waiting..."
  done
fi

if [ -f "$lock_file" ]; then
  echo "Previous operation considered in error. Forcing new operation to start..."
  lock_cleanup
fi

exec 100>$lock_file || exit 1
echo -n "Acquiring lock before proceeding... "
flock -n 100 || exit 1
echo "OK"

sudo chown -R ec2-user.ec2-user "$(dirname $PULLPREVIEW_ENV_FILE)"

if [ -f "$PULLPREVIEW_ENV_FILE" ]; then
  PULLPREVIEW_FIRST_RUN=false
  rm -f "$PULLPREVIEW_ENV_FILE"
else
  PULLPREVIEW_FIRST_RUN=true
fi

echo 'PULLPREVIEW_PUBLIC_DNS=<%= locals.public_dns %>' >> $PULLPREVIEW_ENV_FILE
echo 'PULLPREVIEW_PUBLIC_IP=<%= locals.public_ip %>' >> $PULLPREVIEW_ENV_FILE
echo 'PULLPREVIEW_URL=<%= locals.url %>' >> $PULLPREVIEW_ENV_FILE
echo "PULLPREVIEW_FIRST_RUN=$PULLPREVIEW_FIRST_RUN" >> $PULLPREVIEW_ENV_FILE
echo "COMPOSE_FILE=<%= locals.compose_files.join(":") %>" >> $PULLPREVIEW_ENV_FILE

set -o allexport
source $PULLPREVIEW_ENV_FILE
set +o allexport

cd /

# atomically replacing the app files
if file "$APP_PATH" | grep 'directory'; then 
  sudo rm -rf "$APP_PATH" 
fi
sudo mkdir -p "${APP_PATH}_symlink_new" && sudo chown -R ec2-user.ec2-user "${APP_PATH}_symlink_new" && tar xzf "$1" -C "${APP_PATH}_symlink_new"
sudo ln -s "${APP_PATH}_symlink_new" "${APP_PATH}"
sudo rm -rf "${APP_PATH}_symlink_old" || true
sudo mv "${APP_PATH}_symlink_new" "${APP_PATH}_symlink_old"
sudo ln -vfns "${APP_PATH}_symlink_old" "${APP_PATH}"
sudo chown -R ec2-user.ec2-user "${APP_PATH}_symlink_old"

cd "$APP_PATH"

echo "Cleaning up..."
docker volume prune -f || true

echo "Updating dependencies..."
sudo yum update -y || true

if ! /tmp/pre_script.sh ; then
  echo "Failed to run the pre-script"
  exit 1
fi


pull() {
  docker-compose pull -q
}

# pulling images sometimes result in 'unexpected EOF', so retry at most 5 times
for i in {1..5}; do
  if pull; then break ; fi
done

if [ "$PULLPREVIEW_FIRST_RUN" = false ]; then
  echo "Stopping the application..."
  docker-compose stop
fi

echo "Starting up the application..."
docker-compose up --wait --remove-orphans -d <%= locals.compose_options.join(" ") %>

sleep 5

docker-compose logs --tail 1000
